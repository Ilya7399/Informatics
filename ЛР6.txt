using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ЛР6
{
    internal class Program
    {
        static int arrayLength = 10000;
        int[] array = new int[arrayLength];
        static void Main(string[] args)
        {
            Program arrayObject = new Program();
            DateTime start = DateTime.Now;
            Console.WriteLine(string.Join(", ", FillArray(arrayObject.array)));
            DateTime end = DateTime.Now;
            Console.WriteLine("\n" + $"Время формирования массива: {end - start}" + "\n");
            DateTime startSort = DateTime.Now;
            Console.WriteLine(string.Join(", ", QuickSort(arrayObject.array, 0, arrayLength - 1)));
            DateTime endSort = DateTime.Now;
            Console.WriteLine("\n" + $"Время сортировки массива: {endSort - startSort}" + "\n");
        }
        static int[] FillArray(int[] array)
        {
            Random rnd = new Random();
            for (int i = 0; i < arrayLength; i++)
            {
                array[i] = rnd.Next(0, 9999);
                int a = array[i];
            }
            return array;
        }
        static int[] QuickSort(int[] array, int minIndex, int maxIndex)
        {

            if (minIndex >= maxIndex)
            {
                return array;
            }
            var pivot = minIndex - 1;
            for (var i = minIndex; i < maxIndex; i++)
            {
                if (array[i] < array[maxIndex])
                {
                    pivot++;
                    var a = array[pivot];
                    array[pivot] = array[i];
                    array[i] = a;
                }
            }
            pivot++;
            var t = array[pivot];
            array[pivot] = array[maxIndex];
            array[maxIndex] = t;
            var pivotIndex = pivot;
            QuickSort(array, minIndex, pivotIndex - 1);
            QuickSort(array, pivotIndex + 1, maxIndex);
            return array;
        }
    }
}
